/**
 * This file was generated by the JPA Modeler
 */
package com.spr.models;

import lombok.Getter;
import lombok.Setter;
import org.springframework.transaction.annotation.Transactional;

import javax.persistence.*;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.List;

/**
 * @author dzni0816
 */
@Entity
@Table(name = "so", schema = "spr")
@Getter
@Setter
@Transactional
public class So implements Serializable {

    @Column(name = "SOId", table = "so", nullable = false)
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long SOId;

    @Column(name = "DateCreated", table = "so")
    @Basic
    private String dateCreated;

    @Column(name = "OrderDate", table = "so")
    @Basic
    private String orderDate;

    @Column(name = "Status", table = "so")
    @Basic
    private String status;

    @Column(name = "SONumber", table = "so")
    @Basic
    private String SONumber;

    @Column(name = "PurchaseOrderNumber", table = "so")
    @Basic
    private String purchaseOrderNumber;

    @Column(name = "DateModified", table = "so")
    @Basic
    private String dateModified;

    @Column(name = "FinalMP", table = "so", precision = 2)
    @Basic
    private BigDecimal finalMP;

    @Column(name = "FinalOTP", table = "so", precision = 2)
    @Basic
    private BigDecimal finalOTP;

    @Column(name = "FinalMPwithTaxAndDiscount", table = "so", precision = 2)
    @Basic
    private BigDecimal finalMPwithTaxAndDiscount;

    @Column(name = "FinalOTPwithTaxAndDiscount", table = "so", precision = 2)
    @Basic
    private BigDecimal finalOTPwithTaxAndDiscount;

    @Column(name = "Location", table = "so")
    @Basic
    private String distributionChannel;

    @Column(name = "AttentionFlag", table = "so")
    @Basic
    private String attentionFlag;

    @ManyToOne(targetEntity = Customer.class)
    private Customer customer;

    @OneToMany(targetEntity = Payment.class, mappedBy = "so")
    private List<Payment> payments;

    @OneToMany(targetEntity = Soproduct.class, mappedBy = "so", cascade = CascadeType.REMOVE)
    private List<Soproduct> soproducts;

    @ManyToOne(targetEntity = Location.class)
    private Location location;
}
