/**
 * This file was generated by the JPA Modeler
 */
package com.spr.models;

import lombok.Getter;
import lombok.Setter;
import org.hibernate.annotations.Proxy;
import org.springframework.transaction.annotation.Transactional;

import javax.persistence.*;
import java.io.Serializable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;

/**
 * @author dzni0816
 */

@Entity
@Proxy(lazy = false)
@Getter
@Setter
@Transactional
@Table(name = "item", schema = "spr")
public class Item implements Serializable {

    @Column(name = "ItemId", table = "item", nullable = false)
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long itemId;

    @Column(name = "Name", table = "item")
    @Basic
    private String name;

    @Column(name = "Type", table = "item")
    @Basic
    private String type;

    @Column(name = "Description", table = "item")
    @Basic
    private String description;

    @Column(name = "DefMP", table = "item", precision = 12)
    @Basic
    private Float defMP;

    @Column(name = "DefOTP", table = "item", precision = 12)
    @Basic
    private Float defOTP;

    @Column(name = "ModifiedDate", table = "item")
    @Basic
    private String modifiedDate;

    @Column(name = "Quantity", table = "item")
    @Basic
    private BigInteger quantity;

    @ManyToOne(targetEntity = Item.class)
    private Item parent;

    @OneToMany(targetEntity = Item.class, mappedBy = "parent", cascade = {CascadeType.REMOVE, CascadeType.PERSIST, CascadeType.MERGE}, fetch = FetchType.EAGER)
    private List<Item> items = new ArrayList<>();

    @OneToMany(targetEntity = ItemLocations.class, mappedBy = "item", cascade = CascadeType.REMOVE)
    private List<ItemLocations> itemlocations;

//    @OneToMany(targetEntity = ProductItems.class, mappedBy = "item1")
//    private List<ProductItems> productItemses1;

    @OneToMany(targetEntity = Itemgroup.class, mappedBy = "item1", cascade = CascadeType.REMOVE)
    private List<Itemgroup> itemgroups1;

    @OneToMany(targetEntity = Itemdiscount.class, mappedBy = "item1", cascade = CascadeType.REMOVE)
    private List<Itemdiscount> itemdiscounts1;

    @OneToMany(targetEntity = ItemCharacteristic.class, mappedBy = "item", cascade = CascadeType.REMOVE)
    private List<ItemCharacteristic> itemCharacteristic;

}
